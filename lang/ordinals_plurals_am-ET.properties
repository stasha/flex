# Ethiopia (am-ET)

# input params: [1, m] = [1, gender male]
test.message.m = እኔ {0}.ordinal ነበርኩ እና የ{0}.ቦታ አሸንፍኩ።
# input params: [2, f] = [2, gender female]
test.message.f = እኔ {0}.ordinal ነበርኩ እና ሁለት {0}.ሽልማት አሸንፍኩ።
# input params: [3, n] = [3, gender neutral]
test.message.n = ቡችላው እንደ {0}.ordinal መጣ እና በዚህም ጥሩ {0}.ቦታ አረጋግጧል።

test.message.m.result = እኔ የመጀመሪያ ነበርኩ እና የመጀመሪያውን ቦታ አሸንፍኩ።
test.message.f.result = እኔ ሁለተኛ ነበርኩ እና ሁለት ሽልማቶች አሸንፍኩ።
test.message.n.result = ቡችላው እንደ ሶስተኛ መጣ እና በዚህም ጥሩ ቦታ አረጋግጧል።

# key structure
#
# ordinal.[number]
# ordinal.1 = ...
# ordinal.[number from (inclusive)]-[number to (inclusive)]
# ordinal.1-5 = ...
# ordinal.[number ending with (inclusive)]
# ordinal.n3 = ... // all numbers ending with 3
# ordinal.[number from ending with (inclusive)]-[number to ending with (inclusive)]
# ordinal.n11-n13 = ... // all numbers ending with 11-13 (11, 12, 13)
# ordinal.other = ... used for all other not matched values
#
# value structure
#
# Amharic does not use grammatical gender for ordinals, so values are simple strings.
# ordinal.1 = የመጀመሪያ
# ordinal.2 = ሁለተኛ
# 
# ORDER OF RECORDS DOES MATTER
# 
# Some languages may require more complex key logic to correctly cover ordinals.
# For example if there are keys defined:
# ordinal.n1 = num with ending 1
# ordinal.1 = የመጀመሪያ
# 
# parser will always pick first one because value '1' matches pattern 'n1' (ends with 1).

ordinal.1 = የመጀመሪያ
ordinal.2 = ሁለተኛ
ordinal.3 = ሶስተኛ
ordinal.4 = አራተኛ
ordinal.5 = አምስተኛ
ordinal.6 = ስድስተኛ
ordinal.7 = ሰባተኛ
ordinal.8 = ስምንተኛ
ordinal.9 = ዘጠነኛ
ordinal.10 = አስረኛ
ordinal.other = {0}ኛ

# plurals
#
# key structure:
#
# [word] = (singular) = ...
# ቦታ = ቦታ
# [word].other = (plural)
# ቦታ.other = ቦታዎች
#
# value structure is same as ordinals
# Amharic does not use gender in this context, so values are simple strings.
#
# [word] = [wordbase]

ቦታ = ቦታ
ቦታ.other = ቦታዎች
ቦታ = ቦታ
ቦታ.other = ቦታዎች
ሽልማት.1 = ሽልማት
ሽልማት.2-4 = ሽልማቶች
ሽልማት.other = ሽልማቶች