# Japan (ja-JP)

# input params: [1, m] = [1, gender male]
test.message.m = 私は{0}.ordinalで、{0}.位を獲得しました。
# input params: [2, f] = [2, gender female]
test.message.f = 私は{0}.ordinalで、2つの{0}.賞を獲得しました。
# input params: [3, n] = [3, gender neutral]
test.message.n = 子犬は{0}.ordinalとして到着し、それによって良い{0}.位置を確保しました。

test.message.m.result = 私は1番目で、1位を獲得しました。
test.message.f.result = 私は2番目で、2つの賞を獲得しました。
test.message.n.result = 子犬は3番目として到着し、それによって良い位置を確保しました。

# key structure
#
# ordinal.[number]
# ordinal.1 = ...
# ordinal.[number from (inclusive)]-[number to (inclusive)]
# ordinal.1-5 = ...
# ordinal.[number ending with (inclusive)]
# ordinal.n3 = ... // all numbers ending with 3
# ordinal.[number from ending with (inclusive)]-[number to ending with (inclusive)]
# ordinal.n11-n13 = ... // all numbers ending with 11-13 (11, 12, 13)
# ordinal.other = ... used for all other not matched values
#
# value structure
#
# Japanese does not use grammatical gender for ordinals, so values are simple strings.
# ordinal.1 = 1位
# ordinal.2 = 2位
# 
# ORDER OF RECORDS DOES MATTER
# 
# Some languages may require more complex key logic to correctly cover ordinals.
# For example if there are keys defined:
# ordinal.n1 = num with ending 1
# ordinal.1 = 1位
# 
# parser will always pick first one because value '1' matches pattern 'n1' (ends with 1).

ordinal.1 = 1位
ordinal.2 = 2位
ordinal.3 = 3位
ordinal.4 = 4位
ordinal.5 = 5位
ordinal.6 = 6位
ordinal.7 = 7位
ordinal.8 = 8位
ordinal.9 = 9位
ordinal.10 = 10位
ordinal.other = {0}位

# plurals
#
# key structure:
#
# [word] = (singular) = ...
# 場所 = 場所
# [word].other = (plural)
# 場所.other = 場所
#
# value structure is same as ordinals
# Japanese does not use gender or plural forms in this context, so values are simple strings.
#
# [word] = [wordbase]

場所 = 場所
場所.other = 場所
位置 = 位置
位置.other = 位置
賞.1 = 賞
賞.2-4 = 賞
賞.other = 賞