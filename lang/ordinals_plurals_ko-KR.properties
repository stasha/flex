# South Korea (ko-KR)

# input params: [1, m] = [1, gender male]
test.message.m = 나는 {0}.ordinal였고 첫 번째 {0}.자리를 차지했다.
# input params: [2, f] = [2, gender female]
test.message.f = 나는 {0}.ordinal였고 두 개의 {0}.상을 받았다.
# input params: [3, n] = [3, gender neutral]
test.message.n = 강아지가 {0}.ordinal로 도착해서 좋은 {0}.위치를 확보했다.

test.message.m.result = 나는 첫 번째였고 첫 번째 자리를 차지했다.
test.message.f.result = 나는 두 번째였고 두 개의 상을 받았다.
test.message.n.result = 강아지가 세 번째로 도착해서 좋은 위치를 확보했다.

# key structure
#
# ordinal.[number]
# ordinal.1 = ...
# ordinal.[number from (inclusive)]-[number to (inclusive)]
# ordinal.1-5 = ...
# ordinal.[number ending with (inclusive)]
# ordinal.n3 = ... // all numbers ending with 3
# ordinal.[number from ending with (inclusive)]-[number to ending with (inclusive)]
# ordinal.n11-n13 = ... // all numbers ending with 11-13 (11, 12, 13)
# ordinal.other = ... used for all other not matched values
#
# value structure
#
# Korean does not use grammatical gender for ordinals, so values are simple strings.
# ordinal.1 = 1등
# ordinal.2 = 2등
# 
# ORDER OF RECORDS DOES MATTER
# 
# Some languages may require more complex key logic to correctly cover ordinals.
# For example if there are keys defined:
# ordinal.n1 = num with ending 1
# ordinal.1 = 1등
# 
# parser will always pick first one because value '1' matches pattern 'n1' (ends with 1).

ordinal.1 = 1등
ordinal.2 = 2등
ordinal.3 = 3등
ordinal.4 = 4등
ordinal.5 = 5등
ordinal.6 = 6등
ordinal.7 = 7등
ordinal.8 = 8등
ordinal.9 = 9등
ordinal.10 = 10등
ordinal.other = {0}등

# plurals
#
# key structure:
#
# [word] = (singular) = ...
# 위치 = 위치
# [word].other = (plural)
# 위치.other = 위치
#
# value structure is same as ordinals
# Korean does not use gender or plural forms in this context, so values are simple strings.
#
# [word] = [wordbase]

위치 = 위치
위치.other = 위치
위치 = 위치
위치.other = 위치
상.1 = 상
상.2-4 = 상
상.other = 상