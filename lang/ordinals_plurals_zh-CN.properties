# China (zh-CN)

# input params: [1, m] = [1, gender male]
test.message.m = 我是{0}.ordinal，赢得了{0}.位置。
# input params: [2, f] = [2, gender female]
test.message.f = 我是{0}.ordinal，赢得了两个{0}.奖。
# input params: [3, n] = [3, gender neutral]
test.message.n = 小狗以{0}.ordinal到达，因此确保了一个好的{0}.位置。

test.message.m.result = 我是第一，赢得了第一个位置。
test.message.f.result = 我是第二，赢得了两个奖。
test.message.n.result = 小狗以第三到达，因此确保了一个好的位置。

# key structure
#
# ordinal.[number]
# ordinal.1 = ...
# ordinal.[number from (inclusive)]-[number to (inclusive)]
# ordinal.1-5 = ...
# ordinal.[number ending with (inclusive)]
# ordinal.n3 = ... // all numbers ending with 3
# ordinal.[number from ending with (inclusive)]-[number to ending with (inclusive)]
# ordinal.n11-n13 = ... // all numbers ending with 11-13 (11, 12, 13)
# ordinal.other = ... used for all other not matched values
#
# value structure
#
# Chinese does not use grammatical gender, so values are simple strings.
# ordinal.1 = 第一
# ordinal.2 = 第二
# 
# ORDER OF RECORDS DOES MATTER
# 
# Some languages may require more complex key logic to correctly cover ordinals.
# For example if there are keys defined:
# ordinal.n1 = num with ending 1
# ordinal.1 = 第一
# 
# parser will always pick first one because value '1' matches pattern 'n1' (ends with 1).

ordinal.1 = 第一
ordinal.2 = 第二
ordinal.3 = 第三
ordinal.4 = 第四
ordinal.5 = 第五
ordinal.6 = 第六
ordinal.7 = 第七
ordinal.8 = 第八
ordinal.9 = 第九
ordinal.10 = 第十
ordinal.other = 第{0}

# plurals
#
# key structure:
#
# [word] = (singular) = ...
# 名次 = 名次
# [word].other = (plural)
# 名次.other = 名次
#
# value structure is same as ordinals
# Chinese does not use gender or plural forms in this context, so values are simple strings.
#
# [word] = [wordbase]

名次 = 名次
名次.other = 名次
位置 = 位置
位置.other = 位置
奖项.1 = 奖项
奖项.2-4 = 奖项
奖项.other = 奖项