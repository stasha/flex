# Brazil (pt-BR)

# input params: [1, m] = [1, gender male]
test.message.m = Eu fui {0}.ordinal e ganhei o {0}.lugar.
# input params: [2, f] = [2, gender female]
test.message.f = Eu fui {0}.ordinal e ganhei dois {0}.prêmio.
# input params: [3, n] = [3, gender neutral]
test.message.n = O filhote chegou como {0}.ordinal e assim garantiu uma boa {0}.posição.

test.message.m.result = Eu fui primeiro e ganhei o primeiro lugar.
test.message.f.result = Eu fui segunda e ganhei dois prêmios.
test.message.n.result = O filhote chegou como terceiro e assim garantiu uma boa posição.

# key structure
#
# ordinal.[number]
# ordinal.1 = ...
# ordinal.[number from (inclusive)]-[number to (inclusive)]
# ordinal.1-5 = ...
# ordinal.[number ending with (inclusive)]
# ordinal.n3 = ... // all numbers ending with 3
# ordinal.[number from ending with (inclusive)]-[number to ending with (inclusive)]
# ordinal.n11-n13 = ... // all numbers ending with 11-13 (11, 12, 13)
# ordinal.other = ... used for all other not matched values
#
# value structure
#
# m = male
# f = female
# n = neutral
#
# ordinal.1 = [wordbase](m|f|n) 
# ordinal.2 = [wordbase](|f|)
# ordinal.3 = [wordbase](||) == wordbase
# ordinal.4 = [wordbase](a|a|a) == wordbase
# value = primeir(o|a|o) == primeiro | primeira | primeiro
# value = (primeiro|primeira|primeiro) = primeiro | primeira | primeiro
# 
#
# ORDER OF RECORDS DOES MATTER
# 
# Some languages may require more complex key logic to correctly cover ordinals.
# For example if there are keys defined:
# ordinal.n1 = num with ending 1
# ordinal.1 = primeir(o|a|o)
# 
# parser will always pick first one because value '1' matches pattern 'n1' (ends with 1).

ordinal.1 = primeir(o|a|o)
ordinal.2 = segund(o|a|o)
ordinal.3 = terceir(o|a|o)
ordinal.4 = quart(o|a|o)
ordinal.5 = quint(o|a|o)
ordinal.6 = sext(o|a|o)
ordinal.7 = sétim(o|a|o)
ordinal.8 = oitav(o|a|o)
ordinal.9 = non(o|a|o)
ordinal.10 = décim(o|a|o)
ordinal.other = {0}(o|a|o)

# plurals
#
# key structure:
#
# [word] = (singular) = ...
# lugar = lugar
# [word].other = (plural)
# lugar.other = lugares
#
# value structure is same as ordinals
# supporting gender structure
#
# [word] = [wordbase](m|f|n)

lugar = lugar
lugar.other = lugares
posição = posição
posição.other = posições
prêmio.1 = prêmio
prêmio.2-4 = prêmios
prêmio.other = prêmios