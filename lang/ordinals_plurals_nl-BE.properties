# Belgium (nl-BE)

# input params: [1, m] = [1, gender male]
test.message.m = Ik was {0}.ordinal en won de {0}.plaats.
# input params: [2, f] = [2, gender female]
test.message.f = Ik was {0}.ordinal en won twee {0}.prijs.
# input params: [3, n] = [3, gender neutral]
test.message.n = De pup kwam als {0}.ordinal en verzekerde zo een goede {0}.positie.

test.message.m.result = Ik was eerste en won de eerste plaats.
test.message.f.result = Ik was tweede en won twee prijzen.
test.message.n.result = De pup kwam als derde en verzekerde zo een goede positie.

# key structure
#
# ordinal.[number]
# ordinal.1 = ...
# ordinal.[number from (inclusive)]-[number to (inclusive)]
# ordinal.1-5 = ...
# ordinal.[number ending with (inclusive)]
# ordinal.n3 = ... // all numbers ending with 3
# ordinal.[number from ending with (inclusive)]-[number to ending with (inclusive)]
# ordinal.n11-n13 = ... // all numbers ending with 11-13 (11, 12, 13)
# ordinal.other = ... used for all other not matched values
#
# value structure
#
# Dutch does not use grammatical gender for ordinals in this context, so values are simple strings.
# ordinal.1 = eerste
# ordinal.2 = tweede
# 
# ORDER OF RECORDS DOES MATTER
# 
# Some languages may require more complex key logic to correctly cover ordinals.
# For example if there are keys defined:
# ordinal.n1 = num with ending 1
# ordinal.1 = eerste
# 
# parser will always pick first one because value '1' matches pattern 'n1' (ends with 1).

ordinal.1 = eerste
ordinal.2 = tweede
ordinal.3 = derde
ordinal.4 = vierde
ordinal.5 = vijfde
ordinal.6 = zesde
ordinal.7 = zevende
ordinal.8 = achtste
ordinal.9 = negende
ordinal.10 = tiende
ordinal.other = {0}de

# plurals
#
# key structure:
#
# [word] = (singular) = ...
# plaats = plaats
# [word].other = (plural)
# plaats.other = plaatsen
#
# value structure is same as ordinals
# Dutch does not use gender in this context, so values are simple strings.
#
# [word] = [wordbase]

plaats = plaats
plaats.other = plaatsen
positie = positie
positie.other = posities
prijs.1 = prijs
prijs.2-4 = prijzen
prijs.other = prijzen