# Austria (de-AT)

# input params: [1, m] = [1, gender male]
test.message.m = Ich war {0}.ordinal und habe den {0}.Stelle gewonnen.
# input params: [2, f] = [2, gender female]
test.message.f = Ich war {0}.ordinal und habe zwei {0}.Auszeichnung gewonnen.
# input params: [3, n] = [3, gender neutral]
test.message.n = Der Welpe kam als {0}.ordinal und sicherte sich damit eine gute {0}.Position.

test.message.m.result = Ich war erster und habe den ersten Platz gewonnen.
test.message.f.result = Ich war zweite und habe zwei Auszeichnungen gewonnen.
test.message.n.result = Der Welpe kam als dritter und sicherte sich damit eine gute Position.

# key structure
#
# ordinal.[number]
# ordinal.1 = ...
# ordinal.[number from (inclusive)]-[number to (inclusive)]
# ordinal.1-5 = ...
# ordinal.[number ending with (inclusive)]
# ordinal.n3 = ... // all numbers ending with 3
# ordinal.[number from ending with (inclusive)]-[number to ending with (inclusive)]
# ordinal.n11-n13 = ... // all numbers ending with 11-13 (11, 12, 13)
# ordinal.other = ... used for all other not matched values
#
# value structure
#
# m = male
# f = female
# n = neutral
#
# ordinal.1 = [wordbase](m|f|n) 
# ordinal.2 = [wordbase](|f|)
# ordinal.3 = [wordbase](||) == wordbase
# ordinal.4 = [wordbase](a|a|a) == wordbase
# value = erst(er|e|es) == erster | erste | erstes
# value = (erster|erste|erstes) = erster | erste | erstes
# 
#
# ORDER OF RECORDS DOES MATTER
# 
# Some languages may require more complex key logic to correctly cover ordinals.
# For example if there are keys defined:
# ordinal.n1 = num with ending 1
# ordinal.1 = erst(er|e|es)
# 
# parser will always pick first one because value '1' matches pattern 'n1' (ends with 1).

ordinal.1 = erst(er|e|es)
ordinal.2 = zweit(er|e|es)
ordinal.3 = dritt(er|e|es)
ordinal.4 = viert(er|e|es)
ordinal.5 = fünft(er|e|es)
ordinal.6 = sechst(er|e|es)
ordinal.7 = siebt(er|e|es)
ordinal.8 = acht(er|e|es)
ordinal.9 = neunt(er|e|es)
ordinal.10 = zehnt(er|e|es)
ordinal.other = {0}(er|e|es)

# plurals
#
# key structure:
#
# [word] = (singular) = ...
# platz = platz
# [word].other = (plural)
# platz.other = plätze
#
# value structure is same as ordinals
# supporting gender structure
#
# [word] = [wordbase](m|f|n)

platz = platz
platz.other = plätze
position = position
position.other = positionen
auszeichnung.1 = auszeichnung
auszeichnung.2-4 = auszeichnungen
auszeichnung.other = auszeichnungen