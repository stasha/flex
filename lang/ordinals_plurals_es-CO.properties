# Colombia (es-CO)

# input params: [1, m] = [1, gender male]
test.message.m = Fui {0}.ordinal y gané el {0}.puesto.
# input params: [2, f] = [2, gender female]
test.message.f = Fui {0}.ordinal y gané dos {0}.premio.
# input params: [3, n] = [3, gender neutral]
test.message.n = El cachorro llegó como {0}.ordinal y así aseguró una buena {0}.posición.

test.message.m.result = Fui primero y gané el primer puesto.
test.message.f.result = Fui segunda y gané dos premios.
test.message.n.result = El cachorro llegó como tercero y así aseguró una buena posición.

# key structure
#
# ordinal.[number]
# ordinal.1 = ...
# ordinal.[number from (inclusive)]-[number to (inclusive)]
# ordinal.1-5 = ...
# ordinal.[number ending with (inclusive)]
# ordinal.n3 = ... // all numbers ending with 3
# ordinal.[number from ending with (inclusive)]-[number to ending with (inclusive)]
# ordinal.n11-n13 = ... // all numbers ending with 11-13 (11, 12, 13)
# ordinal.other = ... used for all other not matched values
#
# value structure
#
# m = male
# f = female
# n = neutral
#
# ordinal.1 = [wordbase](m|f|n) 
# ordinal.2 = [wordbase](|f|)
# ordinal.3 = [wordbase](||) == wordbase
# ordinal.4 = [wordbase](a|a|a) == wordbase
# value = primer(o|a|o) == primero | primera | primero
# value = (primero|primera|primero) = primero | primera | primero
# 
#
# ORDER OF RECORDS DOES MATTER
# 
# Some languages may require more complex key logic to correctly cover ordinals.
# For example if there are keys defined:
# ordinal.n1 = num with ending 1
# ordinal.1 = primer(o|a|o)
# 
# parser will always pick first one because value '1' matches pattern 'n1' (ends with 1).

ordinal.1 = primer(o|a|o)
ordinal.2 = segund(o|a|o)
ordinal.3 = tercer(o|a|o)
ordinal.4 = cuart(o|a|o)
ordinal.5 = quint(o|a|o)
ordinal.6 = sext(o|a|o)
ordinal.7 = séptim(o|a|o)
ordinal.8 = octav(o|a|o)
ordinal.9 = noven(o|a|o)
ordinal.10 = décim(o|a|o)
ordinal.other = {0}(o|a|o)

# plurals
#
# key structure:
#
# [word] = (singular) = ...
# puesto = puesto
# [word].other = (plural)
# puesto.other = puestos
#
# value structure is same as ordinals
# supporting gender structure
#
# [word] = [wordbase](m|f|n)

puesto = puesto
puesto.other = puestos
posición = posición
posición.other = posiciones
premio.1 = premio
premio.2-4 = premios
premio.other = premios